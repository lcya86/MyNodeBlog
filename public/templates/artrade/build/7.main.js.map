{"version":3,"sources":["../../src/pages/user/setting/setting.module.ts","webpack:///./src/models/user.ts?9789","../../src/service/user.ts","../../src/pages/user/setting/setting.ts"],"names":[],"mappings":"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","file":"7.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SettingPage } from './setting';\n\n@NgModule({\n  declarations: [\n    SettingPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SettingPage),\n  ],\n  exports: [\n    SettingPage\n  ]\n})\nexport class SettingPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/setting/setting.module.ts","export class User {\n  nickName: string;\n  mbrPasswd: string;\n  memberId: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/user.ts","import { Injectable } from '@angular/core';\nimport { Device } from '@ionic-native/device';\nimport { Http, Response, URLSearchParams, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport { User } from '../models/user';\nimport { Setting } from '../app/app.setting';\n\n/*\n  Generated class for the Login provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\nexport class UserService {\n\n  private loginUrl = this.setting.apiTestHost + '/artradeApp/login.action';\n  private logoutUrl = this.setting.apiTestHost + '/artradeApp/logout.action';\n\n  constructor(public http: Http, private setting: Setting, private device: Device) {\n  }\n\n  login(nickName: string, mbrPasswd: string): Observable<User> {//根据专场id获取拍品列表\n    let params = new URLSearchParams();\n    params.set('imei', this.device.uuid || '0');\n    params.set('nickName', nickName);\n    params.set('mbrPasswd', mbrPasswd);\n    let options = new RequestOptions({\n      params: params,\n      headers: new Headers()\n    });\n    return this.http.get(this.loginUrl, options)\n      .map((res) => {\n        let response = res.json();\n        if (response.result) {\n          let user = new User();\n          user.nickName = response.data.nickName;\n          user.memberId = response.data.memberId;\n          return user;\n        }\n        return undefined;\n      })\n      .catch(this.handleError);\n  }\n\n  logout(nickName: string): Observable<Boolean> {\n    let params = new URLSearchParams();\n    params.set('imei', this.device.uuid || '0');\n    params.set('nickName', nickName);\n    let options = new RequestOptions({\n      params: params,\n      headers: new Headers()\n    });\n    return this.http.get(this.logoutUrl, options)\n      .map((res) => {\n        let response = res.json();\n        return response.result;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/user.ts","import {\n  Component\n} from '@angular/core';\nimport { IonicPage, NavController } from 'ionic-angular';\n//import { StatusBar } from 'ionic-native';\nimport { Storages } from '../../../providers/storages';\nimport { UserService } from '../../../service/user';\n\n@IonicPage()\n@Component({\n  selector: 'page-setting',\n  templateUrl: 'setting.html',\n  providers: [Storages, UserService]\n})\nexport class SettingPage {\n\n  constructor(public navCtrl: NavController, private storages: Storages, private userService: UserService) {\n\n  }\n  ngAfterViewInit() {\n    //StatusBar.styleDefault();\n  }\n\n  doLogout() {\n    this.userService.logout(this.storages.get('User').nickName).subscribe(result => {\n      this.storages.remove(\"User\");\n      this.navCtrl.pop();\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/setting/setting.ts"],"sourceRoot":""}