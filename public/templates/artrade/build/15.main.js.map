{"version":3,"sources":["../../src/pages/home/modals/pickArtist/pickArtist.module.ts","../../src/pages/home/modals/pickArtist/pickArtist.ts","../../src/service/artist.ts"],"names":[],"mappings":"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","file":"15.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PickArtist } from './pickArtist';\n\n@NgModule({\n  declarations: [\n    PickArtist\n  ],\n  imports: [\n    IonicPageModule.forChild(PickArtist),\n  ],\n  exports: [\n    PickArtist\n  ]\n})\nexport class PickArtistModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/modals/pickArtist/pickArtist.module.ts","import { Component} from '@angular/core';\nimport { IonicPage, NavParams, ViewController } from 'ionic-angular';\nimport { Artist } from '../../../../models/artist';\nimport { ArtistService } from '../../../../service/artist';\n@IonicPage()\n@Component({\n  selector: 'pick-artist',\n  templateUrl: 'pickArtist.html',\n  providers: [ArtistService]\n})\nexport class PickArtist {\n\n  artist: Artist;\n  artistName: string;\n  artistList: Artist[];\n  constructor(public viewCtrl: ViewController, params: NavParams, private artistService: ArtistService) {\n\n    if (params.get('artist')) {\n      this.artist = params.get('artist');\n      this.artistName = this.artist.name;\n    } else {\n      this.artistName = '';\n    }\n    this.artistList = [];\n  }\n\n  ngAfterViewInit() {\n    this.artistService.getArtistList().subscribe((data) => {\n      this.artistList = data;\n    })\n  }\n\n  onInput() {\n    this.artistService.getArtistList(this.artistName).subscribe((data) => {\n      this.artistList = data;\n    })\n  }\n\n  confirmArtist(artist) {\n    this.viewCtrl.dismiss({ artist: artist });\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/modals/pickArtist/pickArtist.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, URLSearchParams } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Artist } from '../models/artist';\nimport { Setting } from '../app/app.setting';\n/*\n  Generated class for the Artist provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\nexport class ArtistService {\n  private artistUrl: string = this.setting.apihost + '/artist';\n\n  constructor(private http: Http, private setting: Setting) {\n  }\n\n  getArtistList(name?: string): Observable<Artist[]> {\n    let params = new URLSearchParams();\n    //params.set('callback', 'JSONP_CALLBACK');\n    params.set('Parmeters', '');\n    return this.http.get(this.artistUrl, { search: params })\n      .map(res => res.json().OutputData.Data || [])\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/artist.ts"],"sourceRoot":""}