{"version":3,"sources":["../../src/pages/message/message.module.ts","../../src/service/message.ts","../../src/pages/message/message.ts"],"names":[],"mappings":"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","file":"13.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MessagePage } from './message';\n\n@NgModule({\n  declarations: [\n    MessagePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(MessagePage),\n  ],\n  exports: [\n    MessagePage\n  ]\n})\nexport class MessagePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/message/message.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, URLSearchParams } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport { Message } from '../models/message';\nimport { Setting } from '../app/app.setting';\n\n/*\n  Generated class for the Message provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\nexport class MessageService {\n  private messageUrl = this.setting.apihost + '/homepage';\n  private detailUrl = this.setting.apihost + '/homeMsgContent';\n\n  constructor(public http: Http, private setting: Setting) {\n    //console.log('Hello Message Provider');\n  }\n\n  getMessageList(): Observable<Message[]> {//获取首页json并解析出消息\n    let params = new URLSearchParams();\n    //params.set('callback', 'JSONP_CALLBACK');\n    params.set('Parmeters', '{\"InputData\":[{\"APIName\":\"homepage\",\"Parameters\":[{\"imei\":\"12365478912345\",\"userId\":\"1367197261\"}]}]}');\n    return this.http.get(this.messageUrl, { search: params })\n      .map(res => res.json().OutputData.Data.filter(item => item.modType === 'Info')[0].msgData || [])\n      .catch(this.handleError);\n  }\n\n  getMessageContent(msgId: number): Observable<string> {//根据msgId获取消息内容\n    let params = new URLSearchParams();\n    //params.set('callback', 'JSONP_CALLBACK');\n    params.set('Parmeters', '{\"InputData\":[{\"APIName\":\"homeMsgContent\",\"Parameters\":[{\"msgId\":\"' + msgId + '\",\"imei\":\"966cd7fc994ebbce6c29ea61b651cb6e59aa7e872381bf88ee309e4824dc465a\",\"userId\":\"\"}]}]}');\n    return this.http.get(this.detailUrl, { search: params })\n      .map(res => res.json().OutputData.msgCon || '')\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/message.ts","import {\n  Component\n} from '@angular/core';\nimport { IonicPage, NavController} from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { MessageService } from '../../service/message';\nimport { Message } from '../../models/message';\n\n@IonicPage()\n@Component({\n  selector: 'page-message',\n  templateUrl: 'message.html',\n  providers: [MessageService, StatusBar]\n})\nexport class MessagePage {\n\n  msgList: Message[] = [];\n  constructor(public navCtrl: NavController, private msgService: MessageService, private statusBar: StatusBar) {\n\n  }\n\n  ngAfterViewInit() {\n    //this.statusBar.styleDefault();\n    this.msgService.getMessageList().subscribe(list => {\n      this.msgList = list;\n    });\n  }\n\n\n  enterMessageDetail(msg) {\n    this.navCtrl.push('MessageDetail', { msg: msg });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/message/message.ts"],"sourceRoot":""}