{"version":3,"sources":["../../src/pages/user/information/address/address.module.ts","webpack:///./src/service/address.ts?793d","../../src/pages/user/information/address/address.ts"],"names":[],"mappings":"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","file":"11.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddressPage } from './address';\n\n@NgModule({\n  declarations: [\n    AddressPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AddressPage),\n  ],\n  exports: [\n    AddressPage\n  ]\n})\nexport class AddressPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/information/address/address.module.ts","import { Injectable } from '@angular/core';\nimport { Device } from '@ionic-native/device';\nimport { Http, Response, URLSearchParams, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport { AddressInfo } from '../models/addressInfo';\nimport { Setting } from '../app/app.setting';\n\n/*\n  Generated class for the Login provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\nexport class AddressService {\n\n  private addressListUrl = this.setting.apiTestHost + '/artradeApp/buyer/queryharvestaddr.action';\n  private addAddressUrl = this.setting.apiTestHost + '/artradeApp/buyer/doaddorupdateaddr.action';\n  private modifyAddressUrl = this.setting.apiTestHost + '/artradeApp/buyer/doaddorupdateaddr.action';\n  private delAddressUrl = this.setting.apiTestHost + '/artradeApp/buyer/dodeleteaddr.action';\n  private setDefaultAddressUrl = this.setting.apiTestHost + '/artradeApp/buyer/dodefauladdr.action';\n  private getProvsUrl = this.setting.apiTestHost + '/artrade/common/region/getprovs.action';\n  private getCitiesUrl = this.setting.apiTestHost + '/artrade/common/region/getcities.action';\n\n  constructor(public http: Http, private setting: Setting, private device: Device) {\n  }\n\n  getProvs(): Observable<any[]> {\n    let params = new URLSearchParams();\n    let options = new RequestOptions({\n      params: params,\n      headers: new Headers()\n    });\n    return this.http.get(this.getProvsUrl, options)\n      .map((res) => {\n        let response = res.json();\n        if (response.result) {\n          return response.data;\n        }\n        return null;\n      })\n      .catch(this.handleError);\n  }\n\n  getCities(prvncid: number): Observable<any[]> {\n    let params = new URLSearchParams();\n    params.set('prvncid', prvncid + '');\n    let options = new RequestOptions({\n      params: params,\n      headers: new Headers()\n    });\n    return this.http.get(this.getCitiesUrl, options)\n      .map((res) => {\n        let response = res.json();\n        if (response.result) {\n          return response.data;\n        }\n        return null;\n      })\n      .catch(this.handleError);\n  }\n\n  getAddressList(memberId: string): Observable<AddressInfo[]> {//根据专场id获取拍品列表\n    let params = new URLSearchParams();\n    params.set('imei', this.device.uuid || '0');\n    params.set('memberId', memberId);\n    let options = new RequestOptions({\n      params: params,\n      headers: new Headers()\n    });\n    return this.http.get(this.addressListUrl, options)\n      .map((res) => {\n        let response = res.json();\n        if (response.result) {\n          return response.data;\n        }\n        return null;\n      })\n      .catch(this.handleError);\n  }\n\n  addAddress(memberId: string, address: AddressInfo): Observable<Boolean> {\n    let params = new URLSearchParams();\n    params.set('imei', this.device.uuid || '0');\n    params.set('memberId', memberId);\n    params.set('cneeName', address.cneeName);\n    params.set('cneePhone', address.cneePhone + '');\n    params.set('prvncId', address.prvncId + '');\n    params.set('prvncName', address.prvncName);\n    params.set('cityId', address.cityId + '');\n    params.set('cityName', address.cityName);\n    params.set('cneeAddr', address.cneeAddr);\n    params.set('addrDflt', address.addrDflt);\n    params.set('postCode', address.postCode);\n\n    let options = new RequestOptions({\n      params: params,\n      headers: new Headers()\n    });\n    return this.http.get(this.addAddressUrl, options)\n      .map((res) => {\n        let response = res.json();\n        return response.result;\n      })\n      .catch(this.handleError);\n  }\n\n  modifyAddress(memberId: string, address: AddressInfo): Observable<Boolean> {\n    let params = new URLSearchParams();\n    params.set('imei', this.device.uuid || '0');\n    params.set('memberId', memberId);\n    params.set('addrId', address.addrId + '');\n    params.set('cneeName', address.cneeName);\n    params.set('cneePhone', address.cneePhone + '');\n    params.set('prvncId', address.prvncId + '');\n    params.set('prvncName', address.prvncName);\n    params.set('cityId', address.cityId + '');\n    params.set('cityName', address.cityName);\n    params.set('cneeAddr', address.cneeAddr);\n    params.set('addrDflt', address.addrDflt);\n    params.set('postCode', address.postCode);\n\n    let options = new RequestOptions({\n      params: params,\n      headers: new Headers()\n    });\n    return this.http.get(this.modifyAddressUrl, options)\n      .map((res) => {\n        let response = res.json();\n        return response.result;\n      })\n      .catch(this.handleError);\n  }\n\n  delAddress(memberId: string, addrId: number): Observable<Boolean> {\n    let params = new URLSearchParams();\n    params.set('imei', this.device.uuid || '0');\n    params.set('memberId', memberId);\n    params.set('id', addrId + '');\n\n    let options = new RequestOptions({\n      params: params,\n      headers: new Headers()\n    });\n    return this.http.get(this.delAddressUrl, options)\n      .map((res) => {\n        let response = res.json();\n        return response.result;\n      })\n      .catch(this.handleError);\n  }\n\n  setDefaultAddress(memberId: string, addrId: number): Observable<Boolean> {\n    let params = new URLSearchParams();\n    params.set('imei', this.device.uuid || '0');\n    params.set('memberId', memberId);\n    params.set('addrId', addrId + '');\n\n    let options = new RequestOptions({\n      params: params,\n      headers: new Headers()\n    });\n    return this.http.get(this.setDefaultAddressUrl, options)\n      .map((res) => {\n        let response = res.json();\n        return response.result;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/address.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, ModalController, NavParams} from 'ionic-angular';\nimport { AddressService } from '../../../../service/address';\nimport { User } from '../../../../models/user';\nimport { AddressInfo } from '../../../../models/addressInfo';\n\n@IonicPage()\n@Component({\n  selector: 'page-address',\n  templateUrl: 'address.html',\n  providers: [AddressService]\n})\nexport class AddressPage {\n\n  addressList: AddressInfo[] = [];\n  user: User;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public modCtrl: ModalController, private addressService: AddressService) {\n    this.user = navParams.get('user');\n  }\n  ngAfterViewInit() {\n    this.getAddressList();\n  }\n\n  getAddressList() {\n    this.addressService.getAddressList(this.user.memberId).subscribe(addressList => {\n      this.addressList = addressList;\n    });\n  }\n\n  addAddress() {\n    let add = this.modCtrl.create('AddAdrsPage', { user: this.user });\n    add.onDidDismiss(address => {\n      console.log(address);\n      if (address) {\n        this.addressService.addAddress(this.user.memberId, address).subscribe(result => {\n          if (result) {\n            this.getAddressList();\n          }\n        });\n      }\n    });\n    add.present();\n  }\n\n  delAddress(address: AddressInfo) {\n    this.addressService.delAddress(this.user.memberId, address.addrId).subscribe(result => {\n      if (result) {\n        let index = this.addressList.indexOf(address);\n        this.addressList.splice(index, 1);\n      }\n    });\n  }\n\n  modifyAddress(oldAddress: AddressInfo) {\n    let modify = this.modCtrl.create('AddAdrsPage', { user: this.user, address: oldAddress });\n    modify.onDidDismiss(address => {\n      if (address) {\n        this.addressService.modifyAddress(this.user.memberId, address).subscribe(result => {\n          if (result) {\n            oldAddress = address;\n          }\n        });\n      }\n    });\n    modify.present();\n  }\n\n  setDefaultAddress(address: AddressInfo) {\n    this.addressService.setDefaultAddress(this.user.memberId, address.addrId).subscribe(result => {\n      if (result) {\n        this.addressList.forEach((item, index, array) => {\n          item.addrDflt = \"N\";\n        });\n        address.addrDflt = \"Y\";\n      }\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/information/address/address.ts"],"sourceRoot":""}